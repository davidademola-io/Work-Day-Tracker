name: SonarQube analysis

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
  workflow_dispatch:

permissions:
  pull-requests: read # allows SonarQube to decorate PRs with analysis results

jobs:
  Analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Check out code
        uses: actions/checkout@v3

      - name: Analyze with SonarQube
        uses: SonarSource/sonarqube-scan-action@v1.1.0
        env:
          #GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # GitHub token, auto-provided by GitHub Actions
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}   # SonarQube token from secrets
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}  # SonarQube URL (add to secrets)
        with:
          args: |
            # Unique key of your project. You can find it in SonarQube > [my project] > Project Information (top-right menu)
            # mandatory
            -Dsonar.projectKey=
            # Comma-separated paths to directories containing main source files.
            #-Dsonar.sources= # optional, default is project base directory
            # When you need the analysis to take place in a directory other than the one from which it was launched
            #-Dsonar.projectBaseDir= # optional, default is .
            # Comma-separated paths to directories containing test source files.
            #-Dsonar.tests= # optional. For more info about Code Coverage, please refer to https://docs.sonarcloud.io/enriching/test-coverage/overview/
            # Adds more detail to both client and server-side analysis logs, activating DEBUG mode for the scanner, and adding client-side environment variables and system properties to the server-side log of analysis report processing.
            #-Dsonar.verbose= # optional, default is false
